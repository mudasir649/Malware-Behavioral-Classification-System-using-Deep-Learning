from tkinter import *
from tkinter import ttk
from Classifier import classify
from tkinter import filedialog
from Report_parser import parser
import tensorflow as tf
import json
window = Tk()
window.title("Classify Malware")
window.geometry('500x700')

def report_parser():
    filename = filedialog.askopenfilename(initialdir="C://", multiple=True)

    parser(filename)

def predict():
        filename = filedialog.askopenfilename(
            initialdir="C://")
        with open(filename) as datafile:
            data = json.load(datafile)
            api = (data['behavior']['processes'][1]['calls'][1]['api'])
            print(api)
        def result():
            Categories = ['trojan','backdoor','adware', 'spyware', 'virus', 'worms', 'downloader', 'dropper']
            def result(x):
                return x
            model = tf.keras.models.load_model('model.h5')
            prediction = model.predict(result([21]))
            cat = (Categories[int(prediction[0][0])])
            if cat == 'trojan':
                msg = "Trojan misleads users of its true intent"
                description = Label(window, font=('helvatic', 10, 'bold'),text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            elif cat == 'backdoor':
                msg = "Backdoor is a technique in which a system security mechanism is bypassed undetectably toaccess a computer or its data"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            elif cat == 'adware':
                msg = "Adware hides on your device and serves you advertisements"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            elif cat == 'spyware':
                msg = "Spyware enables a user to obtain covert information about anotherâ€™s computer activities bytransmitting data covertly from their hard drive"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            elif cat == 'virus':
                msg = "Virus is designed to spread from host to host and has the ability to replicate itself"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            elif cat == 'worms':
                msg = "Worms spreads copies of itself from computer to computer"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            elif cat == 'downloader':
                msg = "Downloader share the primary functionality of downloading content"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            elif cat == 'dropper':
                msg = "Dropper surreptitiously carries viruses, back doors and other malicious software so they canbe executed on the compromised machine"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
                classification = Label(window, text=cat, font=('helvatic', 15, 'bold'), fg='green')
                classification.place(x=510, y=370)
            else :
                msg = "Please! try again something went wrong"
                description = Label(window, text=msg, fg="green")
                description.place(x=100, y=400)
        result()

msg = "Malware Behavior Classification"
description = Label(window, font=('helvatic', 15, 'bold'),text=msg, fg="green")
description.place(x=120, y=100)

button_explore = Button(window,
                        text="Browse Files",
                        command=report_parser,bg="yellow",borderwidth="2px")

button_classify = Button(window,
                         text="Classify",
                         command=classify,bg="yellow",borderwidth="2px")

button_predict = Button(window,
                     text="Predict Malware",
                        command=predict,bg="yellow",borderwidth="2px")

button_exit = Button(window,
                     text="Exit",
                     command=exit,bg="yellow",borderwidth="2px")



button_explore.place(x=220, y=190)

button_classify.place(x=230, y=250)

button_predict.place(x=215, y=310)

button_exit.place(x=240, y=370)


window.configure(background = "lightgreen")
window.mainloop()